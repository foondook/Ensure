// <auto-generated />
using System.Threading.Tasks;
using Xunit;

namespace Ensure.Examples.Generated
{
    public class UserAuthenticationTests
    {
        private readonly UserAuthenticationSteps _steps;

        public UserAuthenticationTests()
        {
            _steps = new UserAuthenticationSteps();
        }


        [Fact]
        public async Task UserCanLoginSuccessfully()
        {
            // Arrange
            await _steps.SetUpTestEnvironment();

            // Enter username "john.doe@example.com"
            await _steps.EnterUsernameAsync("john.doe@example.com");
            // Enter password "securePass123"
            await _steps.EnterPasswordAsync("securePass123");
            // Click login button
            await _steps.ClickLoginButtonAsync();
            // Verify user is redirected to "dashboard"
            await _steps.VerifyUserIsRedirectedToAsync("dashboard");
            // Verify welcome message shows "Welcome, John Doe"
            await _steps.VerifyWelcomeMessageShowsAsync("Welcome, John Doe");
        }

        [Fact]
        public async Task LoginFailsWithInvalidCredentials()
        {
            // Arrange
            await _steps.SetUpTestEnvironment();

            // Enter username "john.doe@example.com"
            await _steps.EnterUsernameAsync("john.doe@example.com");
            // Enter password "wrongpass"
            await _steps.EnterPasswordAsync("wrongpass");
            // Click login button
            await _steps.ClickLoginButtonAsync();
            // Verify error message "Invalid credentials"
            await _steps.VerifyErrorMessageAsync("Invalid credentials");
            // Verify user remains on "login" page
            await _steps.VerifyUserRemainsOnPageAsync("login");
        }
    }
}
